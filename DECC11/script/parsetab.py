
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AAS BIG BOE BREAK COMMENT CONTINUE DAS DEFINE ELSE EQU FALSE FOR ID IF MAS NOE NUMBER RAS SAS SET SMA SOE SQS STRING TRUE UNTIL WHILEproc : proc comproc : comcom : '{' proc '}'com : ifif : IF '(' expr ')' com ELSE comif : IF '(' expr ')' comcom : WHILE '(' expr ')' comcom : UNTIL '(' expr ')' comcom : FOR '(' cexpr cexpr expr ')' comcom : DEFINE ID '(' call ')' comcom : cexprcom : ';'cexpr : expr ';'expr : substitutesubstitute : substitute SET logicalsubstitute : substitute AAS logicalsubstitute : substitute SAS logicalsubstitute : substitute MAS logicalsubstitute : substitute DAS logicalsubstitute : substitute RAS logicalsubstitute : substitute SQS logicalsubstitute : logicallogical : logical '&' comparisonlogical : logical '|' comparisonlogical : '!' comparisonlogical : comparisoncomparison : comparison EQU polynomialcomparison : comparison BOE polynomialcomparison : comparison SOE polynomialcomparison : comparison NOE polynomialcomparison : comparison BIG polynomialcomparison : comparison SMA polynomialcomparison : polynomialpolynomial : polynomial '+' factorpolynomial : polynomial '-' factorpolynomial : factorfactor : factor '*' elementfactor : factor '/' elementfactor : factor '%' elementfactor : element '^' factorfactor : elementelement : BREAKelement : CONTINUEelement : '-' NUMBERelement : NUMBERelement : TRUEelement : FALSEelement : STRINGelement : ID '(' call ')'element : IDelement : '{' call '}'element : ID indexindex : index '[' expr ']'index : '[' expr ']'element : '(' expr ')'call : call ',' exprcall : exprcall : "
    
_lr_action_items = {'{':([0,1,2,3,4,6,10,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[3,3,-2,3,-4,35,-11,-12,35,-1,3,35,35,-13,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-3,35,35,35,35,3,3,35,3,-7,-8,3,-6,3,-10,3,-9,-5,]),'WHILE':([0,1,2,3,4,10,13,29,30,36,67,102,103,109,110,111,113,115,116,117,118,119,120,],[5,5,-2,5,-4,-11,-12,-1,5,-13,-3,5,5,5,-7,-8,5,-6,5,-10,5,-9,-5,]),'UNTIL':([0,1,2,3,4,10,13,29,30,36,67,102,103,109,110,111,113,115,116,117,118,119,120,],[8,8,-2,8,-4,-11,-12,-1,8,-13,-3,8,8,8,-7,-8,8,-6,8,-10,8,-9,-5,]),'FOR':([0,1,2,3,4,10,13,29,30,36,67,102,103,109,110,111,113,115,116,117,118,119,120,],[9,9,-2,9,-4,-11,-12,-1,9,-13,-3,9,9,9,-7,-8,9,-6,9,-10,9,-9,-5,]),'DEFINE':([0,1,2,3,4,10,13,29,30,36,67,102,103,109,110,111,113,115,116,117,118,119,120,],[11,11,-2,11,-4,-11,-12,-1,11,-13,-3,11,11,11,-7,-8,11,-6,11,-10,11,-9,-5,]),';':([0,1,2,3,4,7,10,12,13,15,16,17,19,20,22,23,24,25,26,27,28,29,30,32,36,41,59,65,67,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,106,108,109,110,111,113,114,115,116,117,118,119,120,],[13,13,-2,13,-4,36,-11,-50,-12,-14,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-1,13,36,-13,-52,-25,-44,-3,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,13,13,-49,-54,13,-7,-8,13,-53,-6,13,-10,13,-9,-5,]),'IF':([0,1,2,3,4,10,13,29,30,36,67,102,103,109,110,111,113,115,116,117,118,119,120,],[14,14,-2,14,-4,-11,-12,-1,14,-13,-3,14,14,14,-7,-8,14,-6,14,-10,14,-9,-5,]),'!':([0,1,2,3,4,6,10,13,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[18,18,-2,18,-4,18,-11,-12,-1,18,18,18,-13,18,18,18,18,18,18,18,18,18,18,18,18,-3,18,18,18,18,18,18,18,18,-7,-8,18,-6,18,-10,18,-9,-5,]),'BREAK':([0,1,2,3,4,6,10,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[23,23,-2,23,-4,23,-11,-12,23,-1,23,23,23,-13,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-3,23,23,23,23,23,23,23,23,-7,-8,23,-6,23,-10,23,-9,-5,]),'CONTINUE':([0,1,2,3,4,6,10,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[24,24,-2,24,-4,24,-11,-12,24,-1,24,24,24,-13,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-3,24,24,24,24,24,24,24,24,-7,-8,24,-6,24,-10,24,-9,-5,]),'-':([0,1,2,3,4,6,10,12,13,18,19,20,22,23,24,25,26,27,28,29,30,33,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,71,74,75,77,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,106,108,109,110,111,113,114,115,116,117,118,119,120,],[21,21,-2,21,-4,21,-11,-50,-12,21,61,-36,-41,-42,-43,-45,-46,-47,-48,-1,21,21,21,-13,21,21,21,-52,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-44,21,-3,-51,21,-55,21,21,21,61,61,61,61,61,61,-34,-35,-37,-38,-39,-40,21,21,21,-49,-54,21,-7,-8,21,-53,-6,21,-10,21,-9,-5,]),'NUMBER':([0,1,2,3,4,6,10,13,18,21,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[25,25,-2,25,-4,25,-11,-12,25,65,-1,25,25,25,-13,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-3,25,25,25,25,25,25,25,25,-7,-8,25,-6,25,-10,25,-9,-5,]),'TRUE':([0,1,2,3,4,6,10,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[26,26,-2,26,-4,26,-11,-12,26,-1,26,26,26,-13,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-3,26,26,26,26,26,26,26,26,-7,-8,26,-6,26,-10,26,-9,-5,]),'FALSE':([0,1,2,3,4,6,10,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[27,27,-2,27,-4,27,-11,-12,27,-1,27,27,27,-13,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-3,27,27,27,27,27,27,27,27,-7,-8,27,-6,27,-10,27,-9,-5,]),'STRING':([0,1,2,3,4,6,10,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[28,28,-2,28,-4,28,-11,-12,28,-1,28,28,28,-13,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-3,28,28,28,28,28,28,28,28,-7,-8,28,-6,28,-10,28,-9,-5,]),'ID':([0,1,2,3,4,6,10,11,13,18,29,30,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[12,12,-2,12,-4,12,-11,39,-12,12,-1,12,12,12,-13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,12,12,12,12,12,12,-7,-8,12,-6,12,-10,12,-9,-5,]),'(':([0,1,2,3,4,5,6,8,9,10,12,13,14,18,29,30,33,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,67,69,74,75,77,102,103,104,109,110,111,113,115,116,117,118,119,120,],[6,6,-2,6,-4,33,6,37,38,-11,40,-12,43,6,-1,6,6,6,-13,6,6,75,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-3,6,6,6,6,6,6,6,6,-7,-8,6,-6,6,-10,6,-9,-5,]),'$end':([1,2,4,10,13,29,36,67,110,111,115,117,119,120,],[0,-2,-4,-11,-12,-1,-13,-3,-7,-8,-6,-10,-9,-5,]),'}':([2,3,4,10,12,13,15,16,17,19,20,22,23,24,25,26,27,28,29,30,31,32,35,36,41,59,65,67,68,71,72,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,110,111,114,115,117,119,120,],[-2,-58,-4,-11,-50,-12,-14,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-1,67,68,-57,-58,-13,-52,-25,-44,-3,-51,-55,-57,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-56,-49,-54,-7,-8,-53,-6,-10,-9,-5,]),',':([3,12,15,16,17,19,20,22,23,24,25,26,27,28,31,32,35,40,41,59,65,68,71,72,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,108,114,],[-58,-50,-14,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,69,-57,-58,-58,-52,-25,-44,-51,-55,-57,-58,69,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-56,69,-49,-54,-53,]),'ELSE':([4,10,13,36,67,110,111,115,117,119,120,],[-4,-11,-12,-13,-3,-7,-8,118,-10,-9,-5,]),'^':([12,22,23,24,25,26,27,28,41,65,68,71,106,108,114,],[-50,66,-42,-43,-45,-46,-47,-48,-52,-44,-51,-55,-49,-54,-53,]),'*':([12,20,22,23,24,25,26,27,28,41,65,68,71,95,96,97,98,99,100,106,108,114,],[-50,62,-41,-42,-43,-45,-46,-47,-48,-52,-44,-51,-55,62,62,-37,-38,-39,62,-49,-54,-53,]),'/':([12,20,22,23,24,25,26,27,28,41,65,68,71,95,96,97,98,99,100,106,108,114,],[-50,63,-41,-42,-43,-45,-46,-47,-48,-52,-44,-51,-55,63,63,-37,-38,-39,63,-49,-54,-53,]),'%':([12,20,22,23,24,25,26,27,28,41,65,68,71,95,96,97,98,99,100,106,108,114,],[-50,64,-41,-42,-43,-45,-46,-47,-48,-52,-44,-51,-55,64,64,-37,-38,-39,64,-49,-54,-53,]),'+':([12,19,20,22,23,24,25,26,27,28,41,65,68,71,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,60,-36,-41,-42,-43,-45,-46,-47,-48,-52,-44,-51,-55,60,60,60,60,60,60,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'EQU':([12,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,53,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,53,-44,-51,-55,53,53,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'BOE':([12,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,54,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,54,-44,-51,-55,54,54,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'SOE':([12,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,55,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,55,-44,-51,-55,55,55,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'NOE':([12,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,56,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,56,-44,-51,-55,56,56,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'BIG':([12,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,57,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,57,-44,-51,-55,57,57,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'SMA':([12,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,58,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,58,-44,-51,-55,58,58,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'&':([12,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,51,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,51,51,51,51,51,51,51,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'|':([12,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,52,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,52,52,52,52,52,52,52,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'SET':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,44,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'AAS':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,45,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'SAS':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,46,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'MAS':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,47,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'DAS':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,48,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'RAS':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,49,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),'SQS':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,114,],[-50,50,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,-54,-53,]),')':([12,15,16,17,19,20,22,23,24,25,26,27,28,34,40,41,59,65,68,70,71,72,73,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,108,112,114,],[-50,-14,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,71,-58,-52,-25,-44,-51,102,-55,-57,103,-58,106,109,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-56,113,-49,-54,116,-53,]),']':([12,15,16,17,19,20,22,23,24,25,26,27,28,41,59,65,68,71,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,114,],[-50,-14,-22,-26,-33,-36,-41,-42,-43,-45,-46,-47,-48,-52,-25,-44,-51,-55,108,-15,-16,-17,-18,-19,-20,-21,-23,-24,-27,-28,-29,-30,-31,-32,-34,-35,-37,-38,-39,-40,-49,114,-54,-53,]),'[':([12,41,108,114,],[42,77,-54,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'proc':([0,3,],[1,30,]),'com':([0,1,3,30,102,103,109,113,116,118,],[2,29,2,29,110,111,115,117,119,120,]),'if':([0,1,3,30,102,103,109,113,116,118,],[4,4,4,4,4,4,4,4,4,4,]),'expr':([0,1,3,6,30,33,35,37,38,40,42,43,69,74,75,77,102,103,104,109,113,116,118,],[7,7,32,34,7,70,72,73,7,72,78,79,101,7,72,107,7,7,112,7,7,7,7,]),'cexpr':([0,1,3,30,38,74,102,103,109,113,116,118,],[10,10,10,10,74,104,10,10,10,10,10,10,]),'substitute':([0,1,3,6,30,33,35,37,38,40,42,43,69,74,75,77,102,103,104,109,113,116,118,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'logical':([0,1,3,6,30,33,35,37,38,40,42,43,44,45,46,47,48,49,50,69,74,75,77,102,103,104,109,113,116,118,],[16,16,16,16,16,16,16,16,16,16,16,16,80,81,82,83,84,85,86,16,16,16,16,16,16,16,16,16,16,16,]),'comparison':([0,1,3,6,18,30,33,35,37,38,40,42,43,44,45,46,47,48,49,50,51,52,69,74,75,77,102,103,104,109,113,116,118,],[17,17,17,17,59,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,87,88,17,17,17,17,17,17,17,17,17,17,17,]),'polynomial':([0,1,3,6,18,30,33,35,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,69,74,75,77,102,103,104,109,113,116,118,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,89,90,91,92,93,94,19,19,19,19,19,19,19,19,19,19,19,]),'factor':([0,1,3,6,18,30,33,35,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,66,69,74,75,77,102,103,104,109,113,116,118,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,95,96,100,20,20,20,20,20,20,20,20,20,20,20,]),'element':([0,1,3,6,18,30,33,35,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,66,69,74,75,77,102,103,104,109,113,116,118,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,97,98,99,22,22,22,22,22,22,22,22,22,22,22,22,]),'call':([3,35,40,75,],[31,31,76,105,]),'index':([12,],[41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> proc","S'",1,None,None,None),
  ('proc -> proc com','proc',2,'p_proc_proc','parser.py',19),
  ('proc -> com','proc',1,'p_proc_com','parser.py',23),
  ('com -> { proc }','com',3,'p_com_block','parser.py',27),
  ('com -> if','com',1,'p_com_if','parser.py',31),
  ('if -> IF ( expr ) com ELSE com','if',7,'p_if_ifelse','parser.py',35),
  ('if -> IF ( expr ) com','if',5,'p_if_if','parser.py',39),
  ('com -> WHILE ( expr ) com','com',5,'p_com_while','parser.py',43),
  ('com -> UNTIL ( expr ) com','com',5,'p_com_until','parser.py',47),
  ('com -> FOR ( cexpr cexpr expr ) com','com',7,'p_com_for','parser.py',51),
  ('com -> DEFINE ID ( call ) com','com',6,'p_com_define','parser.py',55),
  ('com -> cexpr','com',1,'p_com_cexpr','parser.py',59),
  ('com -> ;','com',1,'p_com_none','parser.py',63),
  ('cexpr -> expr ;','cexpr',2,'p_cexpr_expr','parser.py',67),
  ('expr -> substitute','expr',1,'p_expr_substitute','parser.py',71),
  ('substitute -> substitute SET logical','substitute',3,'p_substitute_set','parser.py',75),
  ('substitute -> substitute AAS logical','substitute',3,'p_substitute_aas','parser.py',79),
  ('substitute -> substitute SAS logical','substitute',3,'p_substitute_sas','parser.py',83),
  ('substitute -> substitute MAS logical','substitute',3,'p_substitute_mas','parser.py',87),
  ('substitute -> substitute DAS logical','substitute',3,'p_substitute_das','parser.py',91),
  ('substitute -> substitute RAS logical','substitute',3,'p_substitute_ras','parser.py',95),
  ('substitute -> substitute SQS logical','substitute',3,'p_substitute_sqs','parser.py',99),
  ('substitute -> logical','substitute',1,'p_substitute_logical','parser.py',103),
  ('logical -> logical & comparison','logical',3,'p_logical_and','parser.py',107),
  ('logical -> logical | comparison','logical',3,'p_logical_or','parser.py',111),
  ('logical -> ! comparison','logical',2,'p_logical_not','parser.py',115),
  ('logical -> comparison','logical',1,'p_logical_comparison','parser.py',119),
  ('comparison -> comparison EQU polynomial','comparison',3,'p_comparison_equ','parser.py',123),
  ('comparison -> comparison BOE polynomial','comparison',3,'p_comparison_boe','parser.py',127),
  ('comparison -> comparison SOE polynomial','comparison',3,'p_comparison_soe','parser.py',131),
  ('comparison -> comparison NOE polynomial','comparison',3,'p_comparison_noe','parser.py',135),
  ('comparison -> comparison BIG polynomial','comparison',3,'p_comparison_big','parser.py',139),
  ('comparison -> comparison SMA polynomial','comparison',3,'p_comparison_sma','parser.py',143),
  ('comparison -> polynomial','comparison',1,'p_comparison_polynomial','parser.py',147),
  ('polynomial -> polynomial + factor','polynomial',3,'p_polynomial_add','parser.py',151),
  ('polynomial -> polynomial - factor','polynomial',3,'p_polynomial_sub','parser.py',155),
  ('polynomial -> factor','polynomial',1,'p_polynomial_factor','parser.py',159),
  ('factor -> factor * element','factor',3,'p_factor_mul','parser.py',163),
  ('factor -> factor / element','factor',3,'p_factor_div','parser.py',167),
  ('factor -> factor % element','factor',3,'p_factor_rem','parser.py',171),
  ('factor -> element ^ factor','factor',3,'p_factor_squ','parser.py',175),
  ('factor -> element','factor',1,'p_factor_element','parser.py',179),
  ('element -> BREAK','element',1,'p_element_break','parser.py',183),
  ('element -> CONTINUE','element',1,'p_element_continue','parser.py',187),
  ('element -> - NUMBER','element',2,'p_element_minus','parser.py',191),
  ('element -> NUMBER','element',1,'p_element_number','parser.py',195),
  ('element -> TRUE','element',1,'p_element_true','parser.py',199),
  ('element -> FALSE','element',1,'p_element_false','parser.py',203),
  ('element -> STRING','element',1,'p_element_string','parser.py',207),
  ('element -> ID ( call )','element',4,'p_element_func','parser.py',211),
  ('element -> ID','element',1,'p_element_var','parser.py',215),
  ('element -> { call }','element',3,'p_element_array','parser.py',219),
  ('element -> ID index','element',2,'p_element_index','parser.py',223),
  ('index -> index [ expr ]','index',4,'p_index_index','parser.py',227),
  ('index -> [ expr ]','index',3,'p_index_expr','parser.py',231),
  ('element -> ( expr )','element',3,'p_element_parenthesis','parser.py',235),
  ('call -> call , expr','call',3,'p_call_call','parser.py',239),
  ('call -> expr','call',1,'p_call_expr','parser.py',243),
  ('call -> <empty>','call',0,'p_call_none','parser.py',247),
]
